plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.hibernate.orm' version '6.5.2.Final'
    id "org.openjfx.javafxplugin" version "0.1.0"
    id "application"
}

group = 'com.wedasoft'
version = '2.2.0'

repositories {
    mavenCentral()
    // mavenLocal()
}

ext {
    javaFxVersion = "17.0.10"
    javaVersion = 17
    gradleTaskGroupName = 'application javafx spring boot'
}

dependencies {
    // Spring boot starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Database
    implementation 'com.h2database:h2'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JavaFX
    implementation "org.openjfx:javafx-controls:${javaFxVersion}"
    implementation "org.openjfx:javafx-fxml:${javaFxVersion}"
    implementation "org.openjfx:javafx-base:${javaFxVersion}"
    implementation "org.openjfx:javafx-graphics:${javaFxVersion}"

    // WedasoftFX
    implementation 'com.wedasoft:wedasoftfxguicommons:1.0.0'
    implementation 'com.wedasoft:wedasoftfxtestbase:1.0.0'
}

application {
    mainClass = 'com.wedasoft.javafxspringbootgradleapp.JfxSpringBootAppLauncher'
}

javafx {
    version = "${javaFxVersion}"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


//noinspection ConfigurationAvoidance
task runJfxSpringBootApp(type: DefaultTask) {
    group = "${gradleTaskGroupName}"
    dependsOn bootRun
    //    doFirst { println("Run runJfxSpringBootApp") }
}

//noinspection ConfigurationAvoidance
task buildExecutableJar(type: DefaultTask) {
    group = "${gradleTaskGroupName}"
    dependsOn bootJar
    //    doFirst { println("Run buildExecutableJar") }
}
